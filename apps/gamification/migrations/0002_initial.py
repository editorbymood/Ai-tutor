# Generated by Django 4.2.25 on 2025-10-22 12:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("courses", "0002_initial"),
        ("gamification", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="userreward",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rewards",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userlevel",
            name="current_level",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="gamification.level"
            ),
        ),
        migrations.AddField(
            model_name="userlevel",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="level",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userchallenge",
            name="challenge",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="gamification.challenge"
            ),
        ),
        migrations.AddField(
            model_name="userchallenge",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="challenges",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userbadge",
            name="badge",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="gamification.badge"
            ),
        ),
        migrations.AddField(
            model_name="userbadge",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="earned_badges",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="pointtransaction",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="point_transactions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="level",
            name="badge",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="gamification.badge",
            ),
        ),
        migrations.AddField(
            model_name="leaderboardentry",
            name="leaderboard",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="entries",
                to="gamification.leaderboard",
            ),
        ),
        migrations.AddField(
            model_name="leaderboardentry",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="leaderboard",
            name="course",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.course",
            ),
        ),
        migrations.AddField(
            model_name="challenge",
            name="badge_reward",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="gamification.badge",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userchallenge",
            unique_together={("user", "challenge")},
        ),
        migrations.AlterUniqueTogether(
            name="userbadge",
            unique_together={("user", "badge")},
        ),
        migrations.AlterUniqueTogether(
            name="leaderboardentry",
            unique_together={("leaderboard", "user")},
        ),
    ]
