# Generated by Django 4.2.25 on 2025-10-22 12:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("icon", models.ImageField(blank=True, null=True, upload_to="badges/")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("achievement", "Achievement"),
                            ("streak", "Streak"),
                            ("social", "Social"),
                            ("learning", "Learning"),
                            ("completion", "Completion"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "criteria_type",
                    models.CharField(
                        choices=[
                            ("quiz_score", "Quiz Score Threshold"),
                            ("streak_days", "Streak Days"),
                            ("courses_completed", "Courses Completed"),
                            ("total_points", "Total Points Earned"),
                            ("social_interactions", "Social Interactions"),
                            ("time_spent", "Time Spent Learning"),
                        ],
                        max_length=50,
                    ),
                ),
                ("criteria_value", models.IntegerField()),
                ("points_reward", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "challenge_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("custom", "Custom"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("learning", "Learning Activity"),
                            ("social", "Social Interaction"),
                            ("quiz", "Quiz Performance"),
                            ("streak", "Streak Maintenance"),
                            ("time", "Time-based"),
                        ],
                        max_length=50,
                    ),
                ),
                ("criteria_type", models.CharField(max_length=50)),
                ("criteria_value", models.IntegerField()),
                ("points_reward", models.IntegerField(default=50)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
                ("max_completions", models.IntegerField(default=1)),
            ],
            options={
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("global", "Global"),
                            ("course", "Course-based"),
                            ("subject", "Subject-based"),
                            ("class", "Class-based"),
                            ("weekly", "Weekly Challenge"),
                            ("monthly", "Monthly Challenge"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "metric",
                    models.CharField(
                        choices=[
                            ("points", "Total Points"),
                            ("streak", "Current Streak"),
                            ("courses_completed", "Courses Completed"),
                            ("time_spent", "Time Spent"),
                            ("quiz_average", "Quiz Average Score"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
                ("max_entries", models.IntegerField(default=100)),
            ],
            options={
                "ordering": ["-end_date"],
            },
        ),
        migrations.CreateModel(
            name="LeaderboardEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.FloatField()),
                ("rank", models.IntegerField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["rank"],
            },
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("level_number", models.IntegerField(unique=True)),
                ("points_required", models.IntegerField()),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["level_number"],
            },
        ),
        migrations.CreateModel(
            name="PointTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.IntegerField()),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("earned", "Earned"),
                            ("spent", "Spent"),
                            ("bonus", "Bonus"),
                            ("penalty", "Penalty"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reason", models.CharField(max_length=100)),
                ("related_object_type", models.CharField(blank=True, max_length=50)),
                ("related_object_id", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Reward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "reward_type",
                    models.CharField(
                        choices=[
                            ("virtual", "Virtual Item"),
                            ("certificate", "Certificate"),
                            ("badge", "Special Badge"),
                            ("feature", "Feature Unlock"),
                            ("discount", "Discount"),
                        ],
                        max_length=50,
                    ),
                ),
                ("points_cost", models.IntegerField()),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="rewards/"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("stock", models.IntegerField(default=-1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["points_cost"],
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-earned_at"],
            },
        ),
        migrations.CreateModel(
            name="UserChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("progress", models.IntegerField(default=0)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("times_completed", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="UserLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_points", models.IntegerField(default=0)),
                ("points_to_next", models.IntegerField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserReward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("redeemed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "reward",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gamification.reward",
                    ),
                ),
            ],
        ),
    ]
