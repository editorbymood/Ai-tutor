# Generated by Django 4.2.25 on 2025-10-22 12:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("answer_text", models.TextField()),
                ("is_correct", models.BooleanField(default=False)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "answers",
                "ordering": ["question", "order"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("question_text", models.TextField()),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("multiple_choice", "Multiple Choice"),
                            ("true_false", "True/False"),
                            ("short_answer", "Short Answer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("points", models.IntegerField(default=1)),
                ("order", models.IntegerField(default=0)),
                ("explanation", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "questions",
                "ordering": ["quiz", "order"],
            },
        ),
        migrations.CreateModel(
            name="QuestionResponse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("text_answer", models.TextField(blank=True)),
                ("is_correct", models.BooleanField(default=False)),
                ("points_earned", models.IntegerField(default=0)),
                ("ai_feedback", models.TextField(blank=True)),
                ("answered_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "question_responses",
            },
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "time_limit",
                    models.IntegerField(
                        blank=True, help_text="Time limit in minutes", null=True
                    ),
                ),
                (
                    "passing_score",
                    models.IntegerField(
                        default=70,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("max_attempts", models.IntegerField(default=3)),
                ("is_ai_generated", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "quizzes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuizAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("attempt_number", models.IntegerField(default=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                (
                    "score",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("total_points", models.IntegerField(default=0)),
                ("earned_points", models.IntegerField(default=0)),
                ("passed", models.BooleanField(default=False)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "time_taken",
                    models.IntegerField(
                        blank=True, help_text="Time taken in seconds", null=True
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="assessments.quiz",
                    ),
                ),
            ],
            options={
                "db_table": "quiz_attempts",
                "ordering": ["-started_at"],
            },
        ),
    ]
